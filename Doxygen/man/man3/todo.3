.TH "todo" 3 "Wed Apr 3 2019" "Version 0.1" "Protocol Developer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
todo \- Todo List 

.IP "\fBModule \fBHelloGoodByeServer\fP \fP" 1c
Increase complexity for more tests 
.PP
Add more configurations 
.PP
Reap children (The harvest is small) 
.PP
Tidy up (remove singletons and probably more) 
.IP "\fBMember \fBhwProt::HelloWorldProtocol::GetDataToSend\fP () override\fP" 1c
Needs work  
.IP "\fBModule \fBlogger\fP \fP" 1c
Add register method So that users can add their own handling strategy  
.IP "\fBMember \fBLoggerClasses::LogFile::WriteAllMessagesToStream\fP () override\fP" 1c
Use Conditional variable to trigger a buffer empty  
.IP "\fBMember \fBLoggerClasses::LogHandler::GetLogFileByName\fP (const std::string &logName) const override\fP" 1c
personalised exceptions  
.IP "\fBModule \fBNetworkCommunication\fP \fP" 1c
perror needs changing to try catch blocks the use strerror 
.PP
refactor out setInterface\&. Do it in the constructor  
.IP "\fBModule \fBPlugin\fP \fP" 1c
Protocol plugins (SNTP, LDAP, etc) 
.PP
threadHandler plugins (Changes the branching implementation) 
.PP
testCase plugins (Changes to how the testcases are read and handled?)
.PP
Add plugin support fo changing the branching method 
.PP
Move the ptr functions to their own file or smth 
.PP
Move the shareMap_t to its own file  
.IP "\fBNamespace \fBPluginLoader\fP \fP" 1c
: This needs to be made into a more factory pattern 
.PP
: so that different parts of the program may all haev plugins 
.PP
: loaded using only a single class  
.IP "\fBModule \fBPluginLoader\fP \fP" 1c
More specializations  
.IP "\fBMember \fBPluginLoader::PluginLoader::ScanForAllPluginsDefaultLoc\fP () override\fP" 1c
Flesh out return  
.IP "\fBClass \fBPluginLoader::PluginLoaderTemplate< TpluginType >\fP \fP" 1c
the other interfaces  
.IP "\fBMember \fBPluginLoader::PluginLoaderTemplate< TpluginType >::ScanForPlugins\fP (std::string newDir)\fP" 1c
Not a directory\&. throw  
.IP "\fBMember \fBPluginLoader::ProtocolPluginHandler::ProtocolPluginHandler\fP ()\fP" 1c
: expand 
.PP
: Needs to loop over an entire directory 
.PP
: pass in the path  
.IP "\fBModule \fBtestAnalyser2\fP \fP" 1c
rapidabstract interface 
.PP
Figure out how to collapse the where() from the rapidxml::parse_error into a single what() 
.PP
rapidabstract interface 
.PP
Refactor variables and operations into their respective classes! 
.PP
rapidabstract interface  
.IP "\fBModule \fBTestCaseHandler\fP \fP" 1c
Output the XML after being tokenized into an intermediate format for faster future parsing
.PP
perahps create this as a seperate app that can be laucnhed from within the core/CLI  
.IP "\fBMember \fBTestRunner::TestRunner::BeginTesting\fP ()\fP" 1c
needs more methods 
.PP
Set up multiple interfaces for the threads (if wanted) so put me in a loop 
.PP
Move blocks into templated methods 
.PP
More plugins (thread handler, etc) 
.PP
exception for wrong config name 
.PP
Need to separate and edit for changing comms interfaces  
.IP "\fBModule \fButility\fP \fP" 1c
figure out why the overloads won't behave\&.\&.\&. 
.PP

