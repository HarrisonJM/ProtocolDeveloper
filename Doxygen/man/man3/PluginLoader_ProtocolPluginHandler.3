.TH "PluginLoader::ProtocolPluginHandler" 3 "Wed Apr 3 2019" "Version 0.1" "Protocol Developer" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PluginLoader::ProtocolPluginHandler \- Loads our DLL\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <old_ProtocolPluginLoader\&.h>\fP
.PP
Inherits \fBPluginLoader::I_PluginLoader\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBProtocolPluginHandler\fP ()"
.br
.RI "Constructor\&. "
.ti -1c
.RI "\fB~ProtocolPluginHandler\fP ()"
.br
.RI "Destructor\&. "
.ti -1c
.RI "Protocol::I_ProtocolInterface * \fBgetIF\fP ()"
.br
.RI "Returns an interface\&. "
.in -1c
.SH "Detailed Description"
.PP 
Loads our DLL\&. 

Will be rethought and replaced with BOOST::dll 
.PP
Definition at line 29 of file old_ProtocolPluginLoader\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "PluginLoader::ProtocolPluginHandler::ProtocolPluginHandler ()"

.PP
Constructor\&. default_constructor
.PP
\fBTodo\fP
.RS 4
: expand 
.PP
: Needs to loop over an entire directory 
.RE
.PP
.PP
loads a plugin 
.PP
\fBTodo\fP
.RS 4
: pass in the path 
.RE
.PP

.PP
Definition at line 25 of file old_ProtocolPluginLoader\&.cpp\&.
.SS "PluginLoader::ProtocolPluginHandler::~ProtocolPluginHandler ()"

.PP
Destructor\&. destructor 
.PP
Definition at line 51 of file old_ProtocolPluginLoader\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "Protocol::I_ProtocolInterface * PluginLoader::ProtocolPluginHandler::getIF ()"

.PP
Returns an interface\&. getIF
.PP
Our main factory\&. Returns a pointer to an interface that we can use To access anything generated in our protocol library
.PP
\fBReturns:\fP
.RS 4
A pointer to the interface we'll be using 
.RE
.PP

.PP
Definition at line 65 of file old_ProtocolPluginLoader\&.cpp\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Protocol Developer from the source code\&.
