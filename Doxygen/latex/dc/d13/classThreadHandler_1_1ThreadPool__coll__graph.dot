digraph "ThreadHandler::ThreadPool"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node2 [label="{ThreadHandler::ThreadPool\n||+ ThreadPool()\l+ ThreadPool()\l+ ~ThreadPool()\l+ InitPool()\l+ AddTaskToQueue()\l+ shutdown()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="A Thread Pool Queue that handles information that needs to be passed back and forth."];
  Node3 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal"];
  Node3 [label="{I_ThreadPool\n||+ ~I_ThreadPool()\l+ InitPool()\l+ shutdown()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$de/d69/classI__ThreadPool.html",tooltip="Thread Pool interface."];
}
