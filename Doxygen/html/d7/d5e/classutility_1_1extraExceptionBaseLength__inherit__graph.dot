digraph "utility::extraExceptionBaseLength"
{
 // INTERACTIVE_SVG=YES
 // LATEX_PDF_SIZE
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node0 [label="{utility::extraExceptionBase\lLength\n||+ extraExceptionBaseLength()\l+ what()\l+ ~extraExceptionBaseLength()\l# _BuildError()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black",tooltip="Base analyser exception class."];
  Node1 -> Node0 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node1 [label="{exception\n||}",height=0.2,width=0.4,color="grey75", fillcolor="white", style="filled",tooltip=" "];
  Node0 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node2 [label="{testAnalyser2::parserExceptionBase\n||+ parserExceptionBase()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/df9/classtestAnalyser2_1_1parserExceptionBase.html",tooltip=" "];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node3 [label="{testAnalyser2::analyserFile\lDoesntExist_Exception\n|+ _info\l|+ analyserFileDoesntExist\l_Exception()\l+ what()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/dcb/classtestAnalyser2_1_1analyserFileDoesntExist__Exception.html",tooltip="An incorrect node/tag pair has been given."];
  Node2 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node4 [label="{testAnalyser2::analyserIncorrect\lXMLType_Exception\n||+ analyserIncorrectXMLType\l_Exception()\l+ what()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d0/d9c/classtestAnalyser2_1_1analyserIncorrectXMLType__Exception.html",tooltip="If the rapid_xml::node type is incorrect at that time."];
  Node2 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node5 [label="{testAnalyser2::analyserMalformed\lTestCase_Exception\n||+ analyserMalformedTestCase\l_Exception()\l+ what()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d9/dc3/classtestAnalyser2_1_1analyserMalformedTestCase__Exception.html",tooltip="Malformed testcase."];
  Node2 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node6 [label="{testAnalyser2::analyserNode\lInWrongPlace_Exception\n||+ analyserNodeInWrongPlace\l_Exception()\l+ what()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$db/d5f/classtestAnalyser2_1_1analyserNodeInWrongPlace__Exception.html",tooltip="The node just found is not at all in the correct place/between the correct tags e...."];
  Node2 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node7 [label="{testAnalyser2::analyserParser\lNullReturn_Exception\n||+ analyserParserNullReturn\l_Exception()\l+ what()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d7/ddc/classtestAnalyser2_1_1analyserParserNullReturn__Exception.html",tooltip="The parser has returned a NULL value."];
  Node2 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node8 [label="{testAnalyser2::analyserWrong\lTagUsedInNode_Exception\n|+ _info\l|+ analyserWrongTagUsedInNode\l_Exception()\l+ what()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d6/df5/classtestAnalyser2_1_1analyserWrongTagUsedInNode__Exception.html",tooltip="An incorrect node/tag pair has been given."];
  Node0 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node9 [label="{utility::extraExceptionBase\n||+ extraExceptionBase()\l+ what()\l+ ~extraExceptionBase()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d5/d78/classutility_1_1extraExceptionBase.html",tooltip="PluginException base class for handling the dlError ro any other extras."];
  Node9 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node10 [label="{PluginLoader::PluginException\n||+ PluginException()\l+ what()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d3/dab/classPluginLoader_1_1PluginException.html",tooltip=" "];
  Node10 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node11 [label="{PluginLoader::PluginFactory\lNullException\n||+ PluginFactoryNullException()\l+ what()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$da/dd0/classPluginLoader_1_1PluginFactoryNullException.html",tooltip="The plugin has returned NULL when finding the factory symbol."];
  Node10 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",arrowtail="onormal",fontname="Helvetica"];
  Node12 [label="{PluginLoader::PluginHandle\lNullException\n||+ PluginHandleNullException()\l+ what()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$d4/d54/classPluginLoader_1_1PluginHandleNullException.html",tooltip="The plugin handle has returned NULL (The plugin cannot be opened)"];
}
